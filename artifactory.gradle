// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

//加载本地maven私服配置（在工程根目录中的local.properties文件中进行配置）
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

//NEXUS 账户名和密码
def USERNAME = "release"
def PASSWORD = "s2UiRCvHrQUbcDH6"

def GROUP_ID = "com.fmwk"
def ARTIFACT_ID = "framework"
def VERSION = "1.0.0"
def TYPE = "aar"
def DESCRIPTION = "desc"

def packageName = 'com.fmwk.framework'
def libraryVersion = '1.0.0'
// 对应的仓库地址
def URL = "http://bin.huwo.io/artifactory/libs-snapshot-local/"
publishing {
    publications {
        aar(MavenPublication) {
            groupId packageName
            version libraryVersion
            artifactId project.getName()
            // Tell maven to prepare the generated "*.aar" file for publishing
            artifact("$buildDir/outputs/aar/${artifactId}-release.aar")
//            groupId GROUP_ID
//            version VERSION
//            artifactId ARTIFACT_ID
//            // 这里获得arr 生成的位置和上传
//            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")

            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each {
                    // 如果有compile fileTree()，group会为空，需要去除
                    if (it.group != null) {
                        def dependency = dependencies.appendNode('dependency')
                        dependency.appendNode('groupId', it.group)
                        dependency.appendNode('artifactId', it.name)
                        dependency.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}


artifactory {
    contextUrl = URL
    publish {
        repository {
            repoKey = 'huwo-local-snapshots'
            username = USERNAME
            password = PASSWORD
            maven = true
        }
        defaults {
            publications('aar')
            publishArtifacts = true
            properties = ['qa.level': 'basic', 'dev': 'core']
            publishPom = true
        }
    }
}